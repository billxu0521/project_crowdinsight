#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jan 26 12:49:58 2018

@author: billxu
"""

# -*- coding: utf8 -*-
import sys
import glob
import random
import pycrfsuite
import crf
import util
import datetime
import csv


# gettraindata
def readtrain():
    with open('Ch_trainfile_Sentiment_3000.csv', 'r') as csvfile:
        reader = csv.reader(csvfile)
        column1 = [row for row in reader]
    content_train = [i[0] for i in column1[1:]] #第一列为文本内容，并去除列名
    opinion_train = [i[1] for i in column1[1:]] #第二列为类别，并去除列名
    print ('%s sentence' % len(content_train))
    train = [content_train, opinion_train]
    return train


traindata = readtrain()

trainer = pycrfsuite.Trainer()
#print trainer.params()
text = traindata[0]
label = traindata[1]

data = []
for line in text:
    d = crf.x_seq_to_features_discrete(line, False)
    data.append(d)

for t in range(0,len(text)):
    #x, y = t
    #y = t[0]
    x = data[t]
    y = label[t]
    for a in x:
        print(a)
        print(y)
        trainer.append(a, y)

trainer.select(crfmethod)
trainer.set('max_iterations',100000) #測試迴圈
#trainer.set('delta',0)
print ("!!!!before train", datetime.datetime.now())
trainer.train(modelname)
print ("!!!!after train", datetime.datetime.now())


tagger = pycrfsuite.Tagger()
#建立訓練模型檔案
tagger.open(modelname)
tagger.dump(modelname+".txt")

print (datetime.datetime.now())
print ("Start testing...")
results = []
while testdata:
    x, yref = testdata.pop()
    yout = tagger.tag(x)
    results.append(util.eval(yref, yout, "S"))

tp, fp, fn, tn = zip(*results)
tp, fp, fn, tn = sum(tp), sum(fp), sum(fn), sum(tn)

p, r = tp/(tp+fp), tp/(tp+fn)
print ("Total tokens in Test Set:", tp+fp+fn+tn)
print ("Total S in REF:", tp+fn)
print ("Total S in OUT:", tp+fp)
print ("Presicion:", p)
print ("Recall:", r)
print ("*******************F1-score:", 2*p*r/(p+r))


print (datetime.datetime.now())
print ("Start closed testing...")
results = []
while traindata:
    x, yref = traindata.pop()
    yout = tagger.tag(x)
    results.append(util.eval(yref, yout, "S"))

tp, fp, fn, tn = zip(*results)
tp, fp, fn, tn = sum(tp), sum(fp), sum(fn), sum(tn)

p, r = tp/(tp+fp), tp/(tp+fn)
print ("Total tokens in Train Set:", tp+fp+fn+tn)
print ("Total S in REF:", tp+fn)
print ("Total S in OUT:", tp+fp)
print ("Presicion:", p)
print ("Recall:", r)
print ("*******************F1-score:", 2*p*r/(p+r))
print (datetime.datetime.now())
